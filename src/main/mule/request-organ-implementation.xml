<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:jira="http://www.mulesoft.org/schema/mule/jira" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jira http://www.mulesoft.org/schema/mule/jira/current/mule-jira.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="publish-organ-request" doc:id="1c04a63c-a241-4dae-8960-3b520a957753" >
		<vm:listener doc:name="receive-request-queue" doc:id="23f126d7-543e-4fb6-a801-7ae87db56b78" config-ref="VM_Config" queueName="receive-request-queue"/>
		<logger level="INFO" doc:name="Logger" doc:id="66cc1f05-c507-45c4-b857-5da1391b463b" message="#[payload]"/>
		<db:select doc:name="Select Receiver and Hospital Data" doc:id="74669dc4-4c21-401c-aa9e-3fb279419d8a" config-ref="Database_Config" target="requestData">
			<db:sql ><![CDATA[select  users.user_id,users.first_name, users.last_name, hospitals.hospital_name from users inner join receiver_requests as req 
on req.user_id = users.user_id inner join hospitals  on req.hospital_id = hospitals.hospital_id  where req.request_id = :req_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	req_id:payload.request_id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="jiraPayload" doc:id="476ed0a2-f717-4e5e-ad17-708a87867688" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="jiraPayload" ><![CDATA[%dw 2.0
output application/json
---
{
  "fields": {
    "project": {
      "key": "OP"
    },
    "summary": "Organ request for for patient ID " ++ payload.user_id as String ++ 
               " and Patient Details are, " ++ vars.requestData[0].first_name  ++ " " ++ vars.requestData[0].last_name  ++
    		   "  Hospital Name:" ++ vars.requestData[0].hospital_name ++ 
               ", Emergency Contact Number : " ++ payload.emergency_contact_number as Number ++                
               ", Organ Required for : " ++ payload.organ_name ++
               ", and the critaclity is : " ++ payload.transplant_priority,
    "issuetype":
     {
      "name": "Task",
      "description":"Organ Request"
     } 
  } 
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="jira payload" doc:id="2e123f5b-3dd8-42f9-822b-bc2f051b931f" message="#[vars.jiraPayload]"/>
		<jira:create-rest-api3-issue doc:name="Create Issue for Organ Request" doc:id="ca9b298b-c763-4788-ab9d-f087b548116e" config-ref="Jira_Connector_Config" target="jiraReturnPayload">
			<jira:issue-update-details-content ><![CDATA[#[vars.jiraPayload]]]></jira:issue-update-details-content>
		</jira:create-rest-api3-issue>
		<db:update doc:name="Update Jira Id in Organ Request" doc:id="42db48c3-4a74-4806-9b2c-db833d4d4153" config-ref="Database_Config" target="updatedRequest">
			<db:sql ><![CDATA[UPDATE receiver_requests SET jira_task_id = :jira_task_id where request_id= :request_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	jira_task_id: vars.jiraReturnPayload.id,
	request_id: payload.request_id
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="fbPayload" doc:id="32eae7c0-7ecf-4aa7-8cf0-571cdd201908" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "link": "${fb.imageUrl}" ++ lower(payload.organ_name) ++ ".jpg",
"message":"#" ++ vars.requestData[0].first_name  ++ " " ++ vars.requestData[0].last_name ++
" 
 need the "++ payload.organ_name ++ ".
Login here to get More Details"

}]]></ee:set-payload>
			</ee:message>
			<ee:variables />
		</ee:transform>
		<logger level="INFO" doc:name="FB payload" doc:id="164c6c56-38b7-4316-90b0-edc48f387124" message="#[payload]"/>
		<flow-ref doc:name="Post Donate Request to FB" doc:id="242e7a82-a630-4448-b6c5-b2f4b7648c8f" name="add-fb-page-feed"/>
		<logger level="INFO" doc:name="Logger" doc:id="30839d76-b019-4ce1-8762-2c5f80df721a" message="vn queue ?"/>
	</flow>
	<flow name="update-organ-request-jira-task" doc:id="2085ef18-79bd-418a-992b-646ce9e61276" >
		<vm:listener doc:name="Listener" doc:id="33e782f7-3759-4d52-add8-b297616bf9b3" config-ref="VM_Config" queueName="organ-request-update"/>
		<logger level="INFO" doc:name="Logger listner payload" doc:id="43fcfc03-168f-4d8b-b6c3-cab1d1e034ad" message="#[payload]"/>
		<choice doc:name="Check if Jira Task Exist" doc:id="b1730897-d1b6-4d3e-bb1f-60d44c584ebf" >
			<when expression="#[!(payload.jira_task_id == null)]">
				<logger level="INFO" doc:name="Logger" doc:id="1af2c078-3097-4a64-85de-03bd3832a46b" message="not null"/>
				<ee:transform doc:name="Jira Payload" doc:id="5ccd0c17-52e6-4850-86a4-d5af0cb44b5b">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="jiraUpdatePayload" ><![CDATA[%dw 2.0
output application/json
---
{
  "fields": {
    "project": {
      "key": "OP"
    },
    "summary": "Organ request for for patient ID " ++ payload.user_id ++ "and Patient Details are, Hospital ID :" ++ payload.hospital_id as String ++ 
                     ", Emergency Contact Number : " ++ payload.emergency_contact_number as Number ++                     
                     ", Organ Required for : " ++ payload.organ_name ++
                     ", and the critaclity is : " ++ payload.transplant_priority,
    "issuetype":
     {
      "name": "Task",
      "description":"task"
     } 
  } 
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="3c96e139-22c4-4833-860b-8b8fdb1618e9" message="#[payload]" />
				<logger level="INFO" doc:name="Logger" doc:id="18ec99b5-d9d9-45cb-ab34-fb06d3ee8d23" message="#[payload.jira_task_id]"/>
				<jira:update-rest-api3-issue-by-issue-id-or-key doc:name="Update Jira Task" doc:id="78a9cecb-f6af-4369-a1ff-59a6ac6b1e30" config-ref="Jira_Connector_Config" issueIdOrKey="#[payload.jira_task_id]">
					<jira:issue-update-details-content ><![CDATA[#[vars.jiraUpdatePayload]]]></jira:issue-update-details-content>
				</jira:update-rest-api3-issue-by-issue-id-or-key>
				<logger level="INFO" doc:name="Logger" doc:id="6298d6f0-d8ce-4c67-9cab-0cff5abadaf5" message="#[payload]"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="ffb74885-d350-4dac-99bc-d7168a59a4d5" message="jira id null"/>
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="InsertOrganRequest" doc:id="d26d448b-3db4-4030-bc85-84c3fd4f4379" >
		<set-variable value="#[payload]" doc:name="inputPayload" doc:id="6ed2144f-2d79-45bc-9207-3e84e6f08dbc" variableName="reqstOrgPayload"/>
		<db:query-single doc:name="Checking Organ Request Existance" doc:id="23f02379-64e9-4330-8a2f-54f8b19e591a" config-ref="Database_Config" target="selectedData">
			<db:sql ><![CDATA[SELECT * from receiver_requests where user_id =:user_id AND organ_name =:organ_name]]></db:sql>
			<db:parameter-types />
			<db:input-parameters ><![CDATA[#[{
	user_id: vars.reqstOrgPayload.user_id,
	organ_name: vars.reqstOrgPayload.organ_name
}]]]></db:input-parameters>
		</db:query-single>
		<logger level="INFO" doc:name="getOrganRequestData" doc:id="eb47eb4c-304f-458c-96b6-955c2fa54e43" message="get organ request data ===&gt; #[vars.selectedData]"/>
		<choice doc:name="Choice" doc:id="f9842bcb-9e0a-4480-a316-b90443492388" >
			<when expression="#[isEmpty(vars.selectedData)]">
				<db:insert doc:name="Insert into Receiver Requests" doc:id="c55984f7-e8a5-4a0f-91c6-3660ca88133e" config-ref="Database_Config" autoGenerateKeys="true" target="requestOrganData">
			<db:sql><![CDATA[INSERT INTO receiver_requests(user_id,hospital_id,organ_name,transplant_priority,survival_time,medical_report,transformation_required,emergency_contact_address,created_at,updated_at,emergency_contact_number,status) 
VALUES (:user_id,:hospital_id,:organ_name,:transplant_priority,:survival_time,:medical_report,:transformation_required,:emergency_contact_address,:created_at,:updated_at,:emergency_contact_number,:status)]]></db:sql>
			<db:parameter-types>
				<db:parameter-type key="transplant_priority" type="OTHER" />
				<db:parameter-type key="status" type="OTHER" />
			</db:parameter-types>
			<db:input-parameters><![CDATA[#[{
	user_id: vars.reqstOrgPayload.user_id,
	hospital_id: vars.reqstOrgPayload.hospital_id,
        organ_name: vars.reqstOrgPayload.organ_name,
        transplant_priority: vars.reqstOrgPayload.transplant_priority,
        survival_time: vars.reqstOrgPayload.survival_time,
        medical_report: vars.reqstOrgPayload.medical_report,
        transformation_required: vars.reqstOrgPayload.transformation_required,
        emergency_contact_address: vars.reqstOrgPayload.emergency_contact_address,
        created_at : now() as String {format: "yyyy-MM-dd HH:mm:ss"},
        updated_at : now() as String {format: "yyyy-MM-dd HH:mm:ss"},
        emergency_contact_number: vars.reqstOrgPayload.emergency_contact_number,
        status: vars.reqstOrgPayload.status
        
}]]]></db:input-parameters>
		</db:insert>
				<set-variable value="#[vars.requestOrganData.generatedKeys.request_id]" doc:name="request_id" doc:id="d3c5deb8-baaa-475c-accb-e5922e29233b" variableName="request_id" />
				<ee:transform doc:name="Organ Request Inserted" doc:id="cf31cf03-21e1-4969-8da0-96a9f522842e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Receiver Request has been added successfully with request ID " ++ vars.request_id as String
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<vm:publish doc:name="Publish Organ Request" doc:id="36ed97a1-f1e7-42cf-9a07-d9ac3d4e772b" config-ref="VM_Config" queueName="receive-request-queue">
					<vm:content ><![CDATA[#[vars.requestOrganData.generatedKeys]]]></vm:content>
				</vm:publish>
			</when>
			<otherwise >
				<ee:transform doc:name="Organ Already Exist" doc:id="83665525-323e-4d31-ba53-16b2248897f0" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:'Your request for '++ vars.selectedData.organ_name ++ ' already exist'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="UpdateOrganRequest" doc:id="e3d7c594-0893-455f-b07e-7be6f099e59c" >
		<set-variable value="#[attributes.uriParams.requestID]" doc:name="request_id" doc:id="a107552b-eaf2-4b64-9744-dd4e1d5da2fa" variableName="request_id"/>
		<logger level="INFO" doc:name="Request Id" doc:id="9182d730-c5cd-44fe-9f04-e1c6cf93813f" message="uri params id==========&gt;#[vars.request_id]"/>
		<db:query-single doc:name="Checking Request Id Existance" doc:id="638525bf-9a05-4172-8859-be1eb0757617" config-ref="Database_Config" target="selectedData">
			<db:sql ><![CDATA[SELECT * from receiver_requests where request_id =: request_id AND status =: status]]></db:sql>
			<db:parameter-types >
			</db:parameter-types>
			<db:input-parameters ><![CDATA[#[{
	request_id: vars.request_id,
	status: "open"
}]]]></db:input-parameters>
		</db:query-single>
		<logger level="INFO" doc:name="selectedData" doc:id="23888dea-2317-4a17-859a-92579649713e" message="all get data #[vars.selectedData]"/>
		<choice doc:name="Choice" doc:id="b596bca0-369f-4298-9c9e-eec9005518d9" >
			<when expression="#[!isEmpty(vars.selectedData)]" >
				<ee:transform doc:name="updateRequestQuery" doc:id="375bc642-835a-4602-832b-6618d0c0175e" >
					<ee:message />
					<ee:variables >
						<ee:set-variable variableName="updateRequestQuery" ><![CDATA[%dw 2.0
output application/json
fun queryFields(item) = (item mapObject ((value, key, index) -> (key) : if(typeOf(value) == Number) value else "'" ++ value ++ "'" ) pluck ((value, key, index) -> [(key) , value ] joinBy(" = "))) joinBy(", ")
---
"UPDATE receiver_requests SET " ++ queryFields(payload) ++ " WHERE request_id = " ++ vars.request_id]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="updateRequestQueryLogger" doc:id="162960f6-2319-446e-936c-e0ccd06792dc" message="#[vars.updateRequestQuery]" />
				<db:update doc:name="Update Organ Request" doc:id="9ab0aaf3-10d2-4689-b633-cff4f6bfbe5d" config-ref="Database_Config" autoGenerateKeys="true">
					<db:sql ><![CDATA[#[vars.updateRequestQuery]]]></db:sql>
				</db:update>
				<logger level="INFO" doc:name="Logger" doc:id="ef45d8fd-7077-4183-a092-5b1b6c398fc5" message="jira tak id ----&gt;#[vars.selectedData.jira_task_id]"/>
				<vm:publish doc:name="Update Organ Request Task" doc:id="4fb69113-76f9-43fb-9671-7e1d4d60cd67" config-ref="VM_Config" queueName="organ-request-update">
					<vm:content ><![CDATA[#[payload.generatedKeys]]]></vm:content>
				</vm:publish>
				<ee:transform doc:name="Organ Request Updated" doc:id="62a109fa-ae9c-43be-8b2f-3781aeae8dcc" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "The Organ request ID " ++ vars.request_id as String ++ " has been updated successfully"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Organ Request Not Exist" doc:id="0ae984b1-b64d-4efa-b0c2-fa7d491d87b0" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:'Organ Request Not Found'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="getAllOrganRequest" doc:id="89ed3fd1-0039-4817-898b-aeb11674ce28" >
		<db:select doc:name="Select" doc:id="cf20bf94-aa3b-4bfc-80e4-b443ed6217ec" config-ref="Database_Config" target="selectedData">
			<db:sql ><![CDATA[SELECT * from receiver_requests WHERE status =: status]]></db:sql>
			<db:parameter-types >
			</db:parameter-types>
			<db:input-parameters ><![CDATA[#[{
	status: "open"
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="b401a780-6a81-4d86-bdc7-e8f6a62fe925" >
			<when expression="!isEmpty(vars.selectedData)">
				<ee:transform doc:name="Default Select Query" doc:id="f2ca57f8-be1e-4ec0-8aeb-0ba287852615" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DefaultQuery" ><![CDATA[%dw 2.0
output application/java
---
"SELECT req.request_id, req.jira_task_id, req.organ_name, req.status, req.hospital_id, ad.landmark, ad.address_line_1, ad.address_line_2, ad.place, ad.district, ad.state,users.* from receiver_requests as req join users ON users.user_id=req.user_id join address as ad ON users.address_id = ad.address_id "]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Query Parameters" doc:id="5356a2dd-12b7-4b60-8f6b-c5f9fa9f45bd" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="params" ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
{
	"users.blood_group": attributes.queryParams.blood_group,
	"req.status": attributes.queryParams.status,
	"req.organ_name": attributes.queryParams.organ_name,
	"ad.state": attributes.queryParams.state,
	"req.transplant_priority": attributes.queryParams.transplant_priority,
	"req.survival_time": attributes.queryParams.survival_time,
	"req.transformation_required": attributes.queryParams.transformation_required
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Dynamic Query" doc:id="10388cd3-69dc-44dd-a0fe-27153fdf5cf2" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="dynamicQuery" ><![CDATA[%dw 2.0
output application/json
fun getQueryParams(item) = (item mapObject ((value, key, index) -> (key) :  "'" ++ value as String ++ "'" ) pluck ((value, key, index) -> [(key) , value ] joinBy(" = "))) joinBy(" AND ")
---
if (isEmpty(vars.params)) vars.DefaultQuery ++ " order by users.user_id ASC LIMIT 1"
else
vars.DefaultQuery ++ " WHERE " ++ getQueryParams(vars.params) ++ " order by users.user_id ASC LIMIT 1"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="dynamicQueryLogger" doc:id="b24a0c68-e808-4861-ae37-400f06ed98c4" message="#[vars.dynamicQuery]"/>
		<db:select doc:name="Select All Receiver Requests" doc:id="bf06332a-818e-4407-aff5-bf7a6c903016" config-ref="Database_Config" target="allReceiverRequests">
			<db:sql ><![CDATA[#[vars.dynamicQuery]]]></db:sql>
		</db:select>
				<ee:transform doc:name="All Receiver Requests" doc:id="3f484428-e0a4-4ec8-bda9-f7e759d0796b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.allReceiverRequests]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Organ Request Not Exist" doc:id="83af24cf-fe9f-492d-a442-177f716acb6e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:'Organ Request Not Found'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="get-request-organ-by-id" doc:id="887342bc-a1ed-446b-94ef-2ba40edbe1ae" >
		<set-variable value="#[attributes.uriParams.requestID]" doc:name="Set Variable" doc:id="3d0bc321-9f93-47c4-866a-ef3f961e4cff" variableName="request_id"/>
		<logger level="INFO" doc:name="Logger" doc:id="102e79d2-8cf4-418b-bed5-f8a452a2fc7b" message="#[vars.request_id]"/>
		<db:query-single doc:name="Query single" doc:id="f2975dd0-27b6-4731-9e04-c207f3c8c4f4" config-ref="Database_Config" target="selectedData">
			<db:sql ><![CDATA[SELECT * from receiver_requests where request_id = :request_id AND status = :status]]></db:sql>
			<db:parameter-types >
				<db:parameter-type key="status" type="OTHER" />
			</db:parameter-types>
			<db:input-parameters ><![CDATA[#[{
	request_id: vars.request_id,
	status: "open"
}]]]></db:input-parameters>
		</db:query-single>
		<logger level="INFO" doc:name="Logger" doc:id="1450b6ba-b911-4bb8-bb46-a584ded80ca2" message="#[vars.selectedData]"/>
		<choice doc:name="Choice" doc:id="bda423c2-02d1-4dea-932c-c04431b4627b" >
			<when expression="#[!isEmpty(vars.selectedData)]">
				<ee:transform doc:name="Transform Message" doc:id="1eeb1865-9623-4e57-a202-553d8645128c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.selectedData]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="bcfa9597-a3f5-4132-9409-dc6492ed5015" >
					<ee:message >
						<ee:set-payload ><![CDATA[output application/json
---
{
	message:'Organ Request Not Found'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
</mule>
